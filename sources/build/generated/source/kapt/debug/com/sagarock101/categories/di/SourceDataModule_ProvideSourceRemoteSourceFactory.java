// Generated by Dagger (https://dagger.dev).
package com.sagarock101.categories.di;

import com.sagarock101.categories.data.SourceService;
import com.sagarock101.categories.data.remoteSource.SourceRemoteSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SourceDataModule_ProvideSourceRemoteSourceFactory implements Factory<SourceRemoteSource> {
  private final SourceDataModule module;

  private final Provider<SourceService> sourceServiceProvider;

  public SourceDataModule_ProvideSourceRemoteSourceFactory(SourceDataModule module,
      Provider<SourceService> sourceServiceProvider) {
    this.module = module;
    this.sourceServiceProvider = sourceServiceProvider;
  }

  @Override
  public SourceRemoteSource get() {
    return provideSourceRemoteSource(module, sourceServiceProvider.get());
  }

  public static SourceDataModule_ProvideSourceRemoteSourceFactory create(SourceDataModule module,
      Provider<SourceService> sourceServiceProvider) {
    return new SourceDataModule_ProvideSourceRemoteSourceFactory(module, sourceServiceProvider);
  }

  public static SourceRemoteSource provideSourceRemoteSource(SourceDataModule instance,
      SourceService sourceService) {
    return Preconditions.checkNotNullFromProvides(instance.provideSourceRemoteSource(sourceService));
  }
}
