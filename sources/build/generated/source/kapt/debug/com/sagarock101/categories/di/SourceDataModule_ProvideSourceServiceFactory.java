// Generated by Dagger (https://dagger.dev).
package com.sagarock101.categories.di;

import com.sagarock101.categories.data.SourceService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SourceDataModule_ProvideSourceServiceFactory implements Factory<SourceService> {
  private final SourceDataModule module;

  private final Provider<Retrofit> retrofitProvider;

  public SourceDataModule_ProvideSourceServiceFactory(SourceDataModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SourceService get() {
    return provideSourceService(module, retrofitProvider.get());
  }

  public static SourceDataModule_ProvideSourceServiceFactory create(SourceDataModule module,
      Provider<Retrofit> retrofitProvider) {
    return new SourceDataModule_ProvideSourceServiceFactory(module, retrofitProvider);
  }

  public static SourceService provideSourceService(SourceDataModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideSourceService(retrofit));
  }
}
