// Generated by Dagger (https://dagger.dev).
package com.sagarock101.categories.di;

import com.sagarock101.categories.data.SourceRepo;
import com.sagarock101.categories.data.remoteSource.SourceRemoteSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SourceDataModule_ProvideSourceRepoFactory implements Factory<SourceRepo> {
  private final SourceDataModule module;

  private final Provider<SourceRemoteSource> sourceRemoteSourceProvider;

  public SourceDataModule_ProvideSourceRepoFactory(SourceDataModule module,
      Provider<SourceRemoteSource> sourceRemoteSourceProvider) {
    this.module = module;
    this.sourceRemoteSourceProvider = sourceRemoteSourceProvider;
  }

  @Override
  public SourceRepo get() {
    return provideSourceRepo(module, sourceRemoteSourceProvider.get());
  }

  public static SourceDataModule_ProvideSourceRepoFactory create(SourceDataModule module,
      Provider<SourceRemoteSource> sourceRemoteSourceProvider) {
    return new SourceDataModule_ProvideSourceRepoFactory(module, sourceRemoteSourceProvider);
  }

  public static SourceRepo provideSourceRepo(SourceDataModule instance,
      SourceRemoteSource sourceRemoteSource) {
    return Preconditions.checkNotNullFromProvides(instance.provideSourceRepo(sourceRemoteSource));
  }
}
