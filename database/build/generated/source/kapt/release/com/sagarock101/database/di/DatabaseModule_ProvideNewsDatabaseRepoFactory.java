// Generated by Dagger (https://dagger.dev).
package com.sagarock101.database.di;

import com.sagarock101.database.NewsDao;
import com.sagarock101.database.NewsDatabaseRepo;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideNewsDatabaseRepoFactory implements Factory<NewsDatabaseRepo> {
  private final DatabaseModule module;

  private final Provider<NewsDao> daoProvider;

  public DatabaseModule_ProvideNewsDatabaseRepoFactory(DatabaseModule module,
      Provider<NewsDao> daoProvider) {
    this.module = module;
    this.daoProvider = daoProvider;
  }

  @Override
  public NewsDatabaseRepo get() {
    return provideNewsDatabaseRepo(module, daoProvider.get());
  }

  public static DatabaseModule_ProvideNewsDatabaseRepoFactory create(DatabaseModule module,
      Provider<NewsDao> daoProvider) {
    return new DatabaseModule_ProvideNewsDatabaseRepoFactory(module, daoProvider);
  }

  public static NewsDatabaseRepo provideNewsDatabaseRepo(DatabaseModule instance, NewsDao dao) {
    return Preconditions.checkNotNullFromProvides(instance.provideNewsDatabaseRepo(dao));
  }
}
