// Generated by Dagger (https://dagger.dev).
package com.sagarock101.database.di;

import com.sagarock101.database.NewsDao;
import com.sagarock101.database.NewsDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideDaoFactory implements Factory<NewsDao> {
  private final DatabaseModule module;

  private final Provider<NewsDatabase> newsDatabaseProvider;

  public DatabaseModule_ProvideDaoFactory(DatabaseModule module,
      Provider<NewsDatabase> newsDatabaseProvider) {
    this.module = module;
    this.newsDatabaseProvider = newsDatabaseProvider;
  }

  @Override
  public NewsDao get() {
    return provideDao(module, newsDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideDaoFactory create(DatabaseModule module,
      Provider<NewsDatabase> newsDatabaseProvider) {
    return new DatabaseModule_ProvideDaoFactory(module, newsDatabaseProvider);
  }

  public static NewsDao provideDao(DatabaseModule instance, NewsDatabase newsDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideDao(newsDatabase));
  }
}
