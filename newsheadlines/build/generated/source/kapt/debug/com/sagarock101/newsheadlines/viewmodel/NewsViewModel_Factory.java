// Generated by Dagger (https://dagger.dev).
package com.sagarock101.newsheadlines.viewmodel;

import android.app.Application;
import com.sagarock101.database.NewsDatabaseRepo;
import com.sagarock101.newsheadlines.data.NewsHeadlinesRepo;
import com.sagarock101.newsheadlines.data.SectionRepo;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NewsViewModel_Factory implements Factory<NewsViewModel> {
  private final Provider<NewsHeadlinesRepo> newsHeadlinesRepoProvider;

  private final Provider<SectionRepo> sectionRepoProvider;

  private final Provider<NewsDatabaseRepo> newsDatabaseRepoProvider;

  private final Provider<Application> applicationProvider;

  public NewsViewModel_Factory(Provider<NewsHeadlinesRepo> newsHeadlinesRepoProvider,
      Provider<SectionRepo> sectionRepoProvider,
      Provider<NewsDatabaseRepo> newsDatabaseRepoProvider,
      Provider<Application> applicationProvider) {
    this.newsHeadlinesRepoProvider = newsHeadlinesRepoProvider;
    this.sectionRepoProvider = sectionRepoProvider;
    this.newsDatabaseRepoProvider = newsDatabaseRepoProvider;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public NewsViewModel get() {
    NewsViewModel instance = newInstance();
    NewsViewModel_MembersInjector.injectNewsHeadlinesRepo(instance, newsHeadlinesRepoProvider.get());
    NewsViewModel_MembersInjector.injectSectionRepo(instance, sectionRepoProvider.get());
    NewsViewModel_MembersInjector.injectNewsDatabaseRepo(instance, newsDatabaseRepoProvider.get());
    NewsViewModel_MembersInjector.injectApplication(instance, applicationProvider.get());
    return instance;
  }

  public static NewsViewModel_Factory create(Provider<NewsHeadlinesRepo> newsHeadlinesRepoProvider,
      Provider<SectionRepo> sectionRepoProvider,
      Provider<NewsDatabaseRepo> newsDatabaseRepoProvider,
      Provider<Application> applicationProvider) {
    return new NewsViewModel_Factory(newsHeadlinesRepoProvider, sectionRepoProvider, newsDatabaseRepoProvider, applicationProvider);
  }

  public static NewsViewModel newInstance() {
    return new NewsViewModel();
  }
}
