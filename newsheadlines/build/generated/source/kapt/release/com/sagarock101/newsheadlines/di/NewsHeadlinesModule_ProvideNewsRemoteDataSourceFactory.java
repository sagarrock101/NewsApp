// Generated by Dagger (https://dagger.dev).
package com.sagarock101.newsheadlines.di;

import com.sagarock101.newsheadlines.data.remote.NewsHeadLinesRemoteSource;
import com.sagarock101.newsheadlines.data.remote.NewsHeadlinesService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NewsHeadlinesModule_ProvideNewsRemoteDataSourceFactory implements Factory<NewsHeadLinesRemoteSource> {
  private final NewsHeadlinesModule module;

  private final Provider<NewsHeadlinesService> newsHeadlinesServiceProvider;

  public NewsHeadlinesModule_ProvideNewsRemoteDataSourceFactory(NewsHeadlinesModule module,
      Provider<NewsHeadlinesService> newsHeadlinesServiceProvider) {
    this.module = module;
    this.newsHeadlinesServiceProvider = newsHeadlinesServiceProvider;
  }

  @Override
  public NewsHeadLinesRemoteSource get() {
    return provideNewsRemoteDataSource(module, newsHeadlinesServiceProvider.get());
  }

  public static NewsHeadlinesModule_ProvideNewsRemoteDataSourceFactory create(
      NewsHeadlinesModule module, Provider<NewsHeadlinesService> newsHeadlinesServiceProvider) {
    return new NewsHeadlinesModule_ProvideNewsRemoteDataSourceFactory(module, newsHeadlinesServiceProvider);
  }

  public static NewsHeadLinesRemoteSource provideNewsRemoteDataSource(NewsHeadlinesModule instance,
      NewsHeadlinesService newsHeadlinesService) {
    return Preconditions.checkNotNullFromProvides(instance.provideNewsRemoteDataSource(newsHeadlinesService));
  }
}
