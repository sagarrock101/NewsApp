// Generated by Dagger (https://dagger.dev).
package com.sagarock101.newsheadlines.di;

import com.sagarock101.newsheadlines.data.SectionRepo;
import com.sagarock101.newsheadlines.data.remote.SectionRemoteSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NewsHeadlinesModule_ProvideSectionRepoFactory implements Factory<SectionRepo> {
  private final NewsHeadlinesModule module;

  private final Provider<SectionRemoteSource> sectionRemoteSourceProvider;

  public NewsHeadlinesModule_ProvideSectionRepoFactory(NewsHeadlinesModule module,
      Provider<SectionRemoteSource> sectionRemoteSourceProvider) {
    this.module = module;
    this.sectionRemoteSourceProvider = sectionRemoteSourceProvider;
  }

  @Override
  public SectionRepo get() {
    return provideSectionRepo(module, sectionRemoteSourceProvider.get());
  }

  public static NewsHeadlinesModule_ProvideSectionRepoFactory create(NewsHeadlinesModule module,
      Provider<SectionRemoteSource> sectionRemoteSourceProvider) {
    return new NewsHeadlinesModule_ProvideSectionRepoFactory(module, sectionRemoteSourceProvider);
  }

  public static SectionRepo provideSectionRepo(NewsHeadlinesModule instance,
      SectionRemoteSource sectionRemoteSource) {
    return Preconditions.checkNotNullFromProvides(instance.provideSectionRepo(sectionRemoteSource));
  }
}
