// Generated by Dagger (https://dagger.dev).
package com.sagarock101.search.di;

import com.sagarock101.search.data.remote.SearchRemoteSource;
import com.sagarock101.search.data.remote.SearchRepo;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchModule_ProvideSearchRepoFactory implements Factory<SearchRepo> {
  private final SearchModule module;

  private final Provider<SearchRemoteSource> searchRemoteSourceProvider;

  public SearchModule_ProvideSearchRepoFactory(SearchModule module,
      Provider<SearchRemoteSource> searchRemoteSourceProvider) {
    this.module = module;
    this.searchRemoteSourceProvider = searchRemoteSourceProvider;
  }

  @Override
  public SearchRepo get() {
    return provideSearchRepo(module, searchRemoteSourceProvider.get());
  }

  public static SearchModule_ProvideSearchRepoFactory create(SearchModule module,
      Provider<SearchRemoteSource> searchRemoteSourceProvider) {
    return new SearchModule_ProvideSearchRepoFactory(module, searchRemoteSourceProvider);
  }

  public static SearchRepo provideSearchRepo(SearchModule instance,
      SearchRemoteSource searchRemoteSource) {
    return Preconditions.checkNotNullFromProvides(instance.provideSearchRepo(searchRemoteSource));
  }
}
