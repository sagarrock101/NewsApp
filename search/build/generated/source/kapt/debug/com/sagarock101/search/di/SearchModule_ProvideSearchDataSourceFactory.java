// Generated by Dagger (https://dagger.dev).
package com.sagarock101.search.di;

import com.sagarock101.search.data.remote.SearchRemoteSource;
import com.sagarock101.search.data.remote.SearchService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchModule_ProvideSearchDataSourceFactory implements Factory<SearchRemoteSource> {
  private final SearchModule module;

  private final Provider<SearchService> searchServiceProvider;

  public SearchModule_ProvideSearchDataSourceFactory(SearchModule module,
      Provider<SearchService> searchServiceProvider) {
    this.module = module;
    this.searchServiceProvider = searchServiceProvider;
  }

  @Override
  public SearchRemoteSource get() {
    return provideSearchDataSource(module, searchServiceProvider.get());
  }

  public static SearchModule_ProvideSearchDataSourceFactory create(SearchModule module,
      Provider<SearchService> searchServiceProvider) {
    return new SearchModule_ProvideSearchDataSourceFactory(module, searchServiceProvider);
  }

  public static SearchRemoteSource provideSearchDataSource(SearchModule instance,
      SearchService searchService) {
    return Preconditions.checkNotNullFromProvides(instance.provideSearchDataSource(searchService));
  }
}
