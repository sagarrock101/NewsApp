// Generated by Dagger (https://dagger.dev).
package com.sagarock101.search.ui.viewmodel;

import com.sagarock101.database.NewsDatabaseRepo;
import com.sagarock101.search.data.remote.SearchRepo;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchViewModel_Factory implements Factory<SearchViewModel> {
  private final Provider<SearchRepo> searchRepoProvider;

  private final Provider<NewsDatabaseRepo> newsDatabaseRepoProvider;

  public SearchViewModel_Factory(Provider<SearchRepo> searchRepoProvider,
      Provider<NewsDatabaseRepo> newsDatabaseRepoProvider) {
    this.searchRepoProvider = searchRepoProvider;
    this.newsDatabaseRepoProvider = newsDatabaseRepoProvider;
  }

  @Override
  public SearchViewModel get() {
    SearchViewModel instance = newInstance();
    SearchViewModel_MembersInjector.injectSearchRepo(instance, searchRepoProvider.get());
    SearchViewModel_MembersInjector.injectNewsDatabaseRepo(instance, newsDatabaseRepoProvider.get());
    return instance;
  }

  public static SearchViewModel_Factory create(Provider<SearchRepo> searchRepoProvider,
      Provider<NewsDatabaseRepo> newsDatabaseRepoProvider) {
    return new SearchViewModel_Factory(searchRepoProvider, newsDatabaseRepoProvider);
  }

  public static SearchViewModel newInstance() {
    return new SearchViewModel();
  }
}
