// Generated by Dagger (https://dagger.dev).
package com.sagarock101.search.di;

import com.sagarock101.search.data.remote.SearchService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchModule_ProvideSearchServiceFactory implements Factory<SearchService> {
  private final SearchModule module;

  private final Provider<Retrofit> retrofitProvider;

  public SearchModule_ProvideSearchServiceFactory(SearchModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SearchService get() {
    return provideSearchService(module, retrofitProvider.get());
  }

  public static SearchModule_ProvideSearchServiceFactory create(SearchModule module,
      Provider<Retrofit> retrofitProvider) {
    return new SearchModule_ProvideSearchServiceFactory(module, retrofitProvider);
  }

  public static SearchService provideSearchService(SearchModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideSearchService(retrofit));
  }
}
